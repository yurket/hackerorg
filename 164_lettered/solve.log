origin = ' &#38&#119&#101&#105&#101&#114&#112&#59&#38&#79&#116&#105&#108&#100&#101&#59&#38&#85&#103&#114&#97&#118&#101&#59&#38&#114&#101&#97&#108&#59&#38&#99&#111&#112&#121&#59&#38&#84&#104&#101&#116&#97&#59&#38&#102&#110&#111&#102&#59&#38&#102&#110&#111&#102&#59&#38&#105&#115&#105&#110&#59&#38&#105&#115&#105&#110&#59 '
s = origin.split('&#')
s
# OUT: [' ', '38', '119', '101', '105', '101', '114', '112', '59', '38', '79', '116', '105', '108', '100', '101', '59', '38', '85', '103', '114', '97', '118', '101', '59', '38', '114', '101', '97', '108', '59', '38', '99', '111', '112', '121', '59', '38', '84', '104', '101', '116', '97', '59', '38', '102', '110', '111', '102', '59', '38', '102', '110', '111', '102', '59', '38', '105', '115', '105', '110', '59', '38', '105', '115', '105', '110', '59 ']
s.pop(0)
# OUT: ' '
s
# OUT: ['38', '119', '101', '105', '101', '114', '112', '59', '38', '79', '116', '105', '108', '100', '101', '59', '38', '85', '103', '114', '97', '118', '101', '59', '38', '114', '101', '97', '108', '59', '38', '99', '111', '112', '121', '59', '38', '84', '104', '101', '116', '97', '59', '38', '102', '110', '111', '102', '59', '38', '102', '110', '111', '102', '59', '38', '105', '115', '105', '110', '59', '38', '105', '115', '105', '110', '59 ']
s = [ x.strip() for x in s ]
s
# OUT: ['38', '119', '101', '105', '101', '114', '112', '59', '38', '79', '116', '105', '108', '100', '101', '59', '38', '85', '103', '114', '97', '118', '101', '59', '38', '114', '101', '97', '108', '59', '38', '99', '111', '112', '121', '59', '38', '84', '104', '101', '116', '97', '59', '38', '102', '110', '111', '102', '59', '38', '102', '110', '111', '102', '59', '38', '105', '115', '105', '110', '59', '38', '105', '115', '105', '110', '59']
s = [ chr(ord(x)) for x in s ]
# OUT: Traceback (most recent call last):
# OUT:   File "<input>", line 1, in <module>
# OUT: TypeError: ord() expected a character, but string of length 2 found
s = [ chr(int(x)) for x in s ]
s
# OUT: ['&', 'w', 'e', 'i', 'e', 'r', 'p', ';', '&', 'O', 't', 'i', 'l', 'd', 'e', ';', '&', 'U', 'g', 'r', 'a', 'v', 'e', ';', '&', 'r', 'e', 'a', 'l', ';', '&', 'c', 'o', 'p', 'y', ';', '&', 'T', 'h', 'e', 't', 'a', ';', '&', 'f', 'n', 'o', 'f', ';', '&', 'f', 'n', 'o', 'f', ';', '&', 'i', 's', 'i', 'n', ';', '&', 'i', 's', 'i', 'n', ';']
''.join(s)
# OUT: '&weierp;&Otilde;&Ugrave;&real;&copy;&Theta;&fnof;&fnof;&isin;&isin;'
# or just use http://unicode-table.com/en/tools/encoder/